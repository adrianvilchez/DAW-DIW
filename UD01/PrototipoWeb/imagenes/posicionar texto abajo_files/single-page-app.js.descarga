(function(){
	'use strict';

	var routesConfiguration = function($routeProvider, $locationProvider) {
			// -------------------- ROUTES --------------------------------------------------------
			// English List
			$routeProvider.when('/my-posts',{
					template : '',
					controller: 'postListEngController'
				})
				.when('/my-posts/:category',{
					template : '',
					controller: 'postListEngController'
				})
				// Spanish List
				.when('/mis-posts',{
					template : '',
					controller: 'postListEspController'
				})
				.when('/mis-posts/:category',{
					template : '',
					controller: 'postListEspController'
				})
				// English Tag Search
				.when('/tag/:tag',{
					template: '',
					controller: 'postListEngController'
				})
				// English Tag Search
				.when('/etiqueta/:tag',{
					template: '',
					controller: 'postListEspController'
				})
				// CV Eng
				.when('/cv',{
					template : '',
					controller: 'cvController'
				})
				// Contact-me Eng
				.when('/contact-me',{
					template : '',
					controller: 'contactMeController'
				})
				// Contact-me Esp
				.when('/escribeme',{
					template : '',
					controller: 'contactMeController'
				})
				// About-me Eng
				.when('/about-me',{
					template : '',
					controller: 'aboutMeController'
				})
				// About-me Esp
				.when('/acerca-de-mi',{
					template : '',
					controller: 'aboutMeController'
				})
				.otherwise({
					template : '',
					controller: 'loadItController'
				});
			$.each(allposts, function(catIdx,category){
				$.each(category.posts, function(postIdx,post){
					// English Posts
					$routeProvider.when(post[0],{
							template : '',
							controller: 'postEngController'
						})
						// Spanish Posts
						.when(post[2],{
							template : '',
							controller: 'postEspController'
						});
				});
			});
			$locationProvider.html5Mode(true);
		},
		Services = {
			pageOrder : function() {
				var postsOrder = [];
				$.each(allposts, function(catIdx,category){
					$.each(category.posts, function(postIdx,post){
						postsOrder.push({
							urlEng:post[0],
							urlEsp:post[2],
							date:post[4]
						});
					});
				});
				postsOrder.sort(function(a, b) {
					return parseFloat(a.date) - parseFloat(b.date);
				});
				var service = {
						isThisFirstPage : true,
						previousPageOrderId : 0,
						findOrderIDfromURL : function(url){
							var PostID = 0;
							$.each(postsOrder, function(postIdx,post){
								if(post.urlEng == url || post.urlEsp == url){
									PostID = postIdx+1;
								};
							});
							return PostID;
						},
						urlIsPost : function(url){
							var isPost = false;
							$.each(postsOrder, function(postIdx,post){
								if(post.urlEng == url || post.urlEsp == url){
									isPost = true;
								};
							});
							return isPost;
						},
						directionFromOrderID : function (newPageID,isPost){
							var direction = 'N'; // L:left; R:right; N:noMove->Instant;
							if(service.isThisFirstPage){
								service.isThisFirstPage = false;
							}else{
								if(isPost){
									if(service.previousPageOrderId <= 0){
										// Previous Non-Post and this is Post
										direction = 'R';
									}else{
										// Both Post
										if(newPageID>=service.previousPageOrderId){
											direction = 'R';
										}else{
											direction = 'L';
										}
									}
								}else{
									if(service.previousPageOrderId <= 0){
										// Both are Non-Post
										direction = 'R';
									}else{
										// Previous Post
										direction = 'L';
									};
								};
							};
							// Update for next request
							service.previousPageOrderId = newPageID;
							return direction;
						},
						directionNewPage : function (url){
							return service.directionFromOrderID(
										service.findOrderIDfromURL(url),
										service.urlIsPost(url)
									);
						}
					};
				return service;
			},
			MovePage : function($compile){
				var service = {
					page_not_flipping : true,
					timer : 0,
					moveToRight : function(){
						var mobileVersion = false;
						if($('#pages').width()<=992){
							mobileVersion = true;
						}
						service.page_not_flipping = false;
						$('#pages .page-left.newpage').css('borderSpacing',0).animate({ borderSpacing: 180 }, {
							step: function(now, tween) {
								if (tween.prop === "borderSpacing") {
									if(now<90){
										$('#pages .page-left.newpage').css('display','none');
										$('#pages .page-rght.currentpage').css({
											transform:(!mobileVersion?'rotateY('+(-1*now)+'deg)':'rotateX('+(1*now)+'deg)'),
											display:'block'
										});
										$('#pages .currentpage').css('z-index','150');
										$('#pages .newpage').css('z-index','100');
									}else{
										$('#pages .page-rght.currentpage').css('display','none');
										$('#pages .page-left.newpage').css({
											transform:(!mobileVersion?'rotateY('+(180-now)+'deg)':'rotateX('+(-180+now)+'deg)'),
											display:'block'
										});
										$('#pages .currentpage').css('z-index','100');
										$('#pages .newpage').css('z-index','150');
									}
								};
							},
							complete: function() {
								$('#pages .currentpage').remove();
								$('#pages .newpage').removeClass('newpage').addClass('currentpage');
								service.page_not_flipping = true;
							},
							duration:2000
						},'swing');
					},
					moveToLeft : function(){
						var mobileVersion = false;
						if($('#pages').width()<=992){
							mobileVersion = true;
						}
						service.page_not_flipping = false;
						$('#pages .page-left.newpage').css('borderSpacing',0).animate({ borderSpacing: 180 }, {
							step: function(now, tween) {
								if (tween.prop === "borderSpacing") {
									if(now<90){
										$('#pages .page-rght.newpage').css('display','none');
										$('#pages .page-left.currentpage').css({
											transform:(!mobileVersion?'rotateY('+(1*now)+'deg)':'rotateX('+(-1*now)+'deg)'),
											display:'block'
										});
										$('#pages .currentpage').css('z-index','150');
										$('#pages .newpage').css('z-index','100');
									}else{
										$('#pages .page-left.currentpage').css('display','none');
										$('#pages .page-rght.newpage').css({
											transform:(!mobileVersion?'rotateY('+(-180+now)+'deg)':'rotateX('+(180-now)+'deg)'),
											display:'block'
										});
										$('#pages .currentpage').css('z-index','100');
										$('#pages .newpage').css('z-index','150');
									}
								};
							},
							complete: function() {
								$('#pages .currentpage').remove();
								$('#pages .newpage').removeClass('newpage').addClass('currentpage');
								service.page_not_flipping = true;
							},
							duration:2000
						},'swing');
					},
					run : function (direction,LeftView,RightView,$scope,delayedCall){
						if (typeof(delayedCall)==='undefined') delayedCall = false;
						if( service.page_not_flipping ){
							service.startAnimation(direction,LeftView,RightView,$scope,delayedCall);
						}else{
							service.timer = setTimeout(function(){
								service.run(direction,LeftView,RightView,$scope,true);
							}, 500);
						};
					},
					startAnimation : function (direction,LeftView,RightView,$scope,delayedCall){
						$scope.$on('$includeContentLoaded', function() {
							$(window).resize();
						});
						if(direction == 'N'){
							$('#pages .page-left.currentpage').html("").append($compile(LeftView)($scope));
							$('#pages .page-rght.currentpage').html("").append($compile(RightView)($scope));
							if(delayedCall){
								$scope.$apply();
							};
							setTimeout(function () { 
								initiatePage($,'#pages .currentpage');
								// Scrolls
								$('#pages .currentpage .scrollme').customScroll($('#pages .currentpage .scroll-linked'));
								// Code Highlighting
								setTimeout(function () { 
									Prism.highlightAll();
								}, 1000);
							}, 0, false);
						}else{
							var newpages = $(
									'<aside class="page page-left newpage"></aside>'+
									'<main  class="page page-rght newpage"></main>'
								);
							if(direction == 'L'){
								$('#pages').prepend(newpages);
							}else{
								$('#pages').append(newpages);
							};
							$('#pages .page-left.newpage').append($compile(LeftView)($scope));
							$('#pages .page-rght.newpage').append($compile(RightView)($scope));
							if(delayedCall){
								$scope.$apply();
							};
							setTimeout(function () { 
								initiatePage($,'#pages .newpage');
								// Scrolls
								$('#pages .newpage .scrollme').customScroll($('#pages .newpage .scroll-linked'));
								// Translation Flag
								$('#topnav .flag').attr('href', $scope.traslation)
								$('#topnav>div').removeClass('lang-en lang-es')
									.addClass( 'lang-' + $scope.lang );
								// Code Highlighting
								setTimeout(function () { 
									Prism.highlightAll();
								}, 1000);
								// Flip page
								if(direction == 'L'){
									service.moveToLeft();
								}else{
									service.moveToRight();
								}
							}, 0, false);
						};
						
					}
				};
				return service;
			}
		},
		Views = {
			postBlock : function(){
				return '<figure>'+
							'<a ng-href="{{post.URL}}">'+
								'<img ng-src="{{post.imgURL}}" alt="{{post.title}}" />'+
							'</a>'+
						'</figure>'+
						'<figcaption>'+
							'<h3>'+
								'<a ng-href="{{post.URL}}">'+
									'<span ng-bind-html="post.title"></span>'+
								'</a>'+
							'</h3>'+
							'<p>'+
								'<a ng-href="{{post.URL}}">'+
									'{{ViewArticle}} <i class="arrow-circle-right iblue hoverOnParent"></i>'+
								'</a>'+
							'</p>'+
						'</figcaption>';
			},
			postListL : function(){
				return '<div class="post-list-l">'+
							'<div class="categories">'+
								'<h1 ng-bind-html="postsheader"></h1>'+
								'<nav>'+
									'<h3 ng-repeat="cat in categories">'+
										'<a ng-href="{{cat.url}}" ng-bind-html="cat.title"></a>'+
									'</h3>'+
								'</nav>'+
							'</div>'+
							'<div class="posts-half">'+
								'<h1 ng-bind-html="currentheader"></h1>'+
								'<div class="scroll-linked">'+
									'<div class="first-col" ng-repeat="post in posts | orderBy:\'-date\'" ng-if="$index % 3 == 0">'+
										this.postBlock()+
									'</div>'+
									'<div class="bottomblock"></div>'+
								'</div>'+
							'</div>'+
						'</div>';
			},
			postListR : function(){
				return '<div class="post-list-r">'+
							'<h1 class="titlemov" ng-bind-html="currentheader"></h1>'+
							'<div class="scrollme">'+
								'<div ng-repeat="post in posts | orderBy:\'-date\'" ng-class="{\'first-col\': $index % 3 == 0,\'second-col\': $index % 3 == 1,\'third-col\': $index % 3 == 2}">'+
									this.postBlock()+
								'</div>'+
								'<div class="bottomblock"></div>'+
							'</div>'+
						'</div>';
			},
			postL : function(){
				return '<div class="post-bar">'+
							'<a class="prev-post" ng-href="{{PrevURL}}" ng-if="PrevURL!=\'\'"><i class="arrow-left"></i></a>'+
							'<div class="side">'+
								'<nav>'+
									'<h1 ng-bind-html="morepostsheader"></h1>'+
									'<h3 ng-repeat="cat in categories" ng-class="{\'first-btn\': $first,\'even\': $even}">'+
										'<a ng-href="{{cat.url}}" ng-bind-html="cat.title"></a>'+
									'</h3>'+
								'</nav>'+
								'<div class="tags-box rght-box">'+
									'<h1 ng-bind-html="readaboutheader"></h1>'+
									'<h3 ng-repeat="tag in tags" ng-class="{\'first-btn\': $first,\'even\': $even}">'+
										'<a ng-href="{{tag.url}}" ng-bind-html="tag.title"></a>'+
									'</h3>'+
								'</div>'+
								'<div class="social-box rght-box">'+
									'<h1 ng-bind-html="shareloveheader"></h1>'+
										'<h3 class="first-btn"><a href="javascript:void(0);" ng-click="social(\'fbIcon\')"><i class="fb-icon"></i></a></h3>'+
										'<h3><a href="javascript:void(0);" ng-click="social(\'twIcon\')"><i class="tw-icon"></i></a></h3>'+
										'<h3><a href="javascript:void(0);" ng-click="social(\'gpIcon\')"><i class="gp-icon"></i></a></h3>'+
										'<h3><a href="javascript:void(0);" ng-click="social(\'linIcon\')"><i class="lin-icon"></i></a></h3>'+
										'<h3><a href="javascript:void(0);" ng-click="social(\'reddIcon\')"><i class="redd-icon"></i></a></h3>'+
										'<h3><a href="javascript:void(0);" ng-click="social(\'pinIcon\')"><i class="pin-icon"></i></a></h3>'+
								'</div>'+
							'</div>'+
						'</div>';
			},
			postR : function(pagePath){
				return '<div class="post-content">'+
							'<a class="next-post" ng-href="{{NextURL}}" ng-if="NextURL!=\'\'"><i class="arrow-right iblue"></i></a>'+
							'<div class="scrollme">'+
								'<div class="post-container" ng-include="\''+pagePath+'\'"></div>'+
							'</div>'+
						'</div>';
			},
			cvL : function(){
				return '<div class="post-bar">'+
							'<div class="side" ng-include="\'/content/cv-l\'">'+
							'</div>'+
						'</div>';
			},
			cvR : function(){
				return '<div class="post-content">'+
							'<a class="next-post" ng-href="/"><i class="arrow-up iblue"></i></a>'+
							'<div class="scrollme">'+
								'<div class="post-container" ng-include="\'/content/cv-r\'"></div>'+
							'</div>'+
						'</div>';
			}
		},
		Controllers = {
			postListEng : function($scope,$routeParams,$sce,pageOrder,MovePage){
				var myScope = $scope.$new(true),
					tag_selected = "",
					category_selected = "";
				// Wether is a category/tag/full list
				myScope.postsheader = $sce.trustAsHtml("My <b>Posts</b>");
				myScope.currentheader = $sce.trustAsHtml("All <b>Posts</b>");
				myScope.ViewArticle = "View Article";
				myScope.lang = 'en';
				myScope.traslation = '/mis-posts';
				if(typeof $routeParams.tag != 'undefined'){
					tag_selected = $routeParams.tag;
					myScope.currentheader = $sce.trustAsHtml("About: <b>"+tag_selected.toUpperCase()+"</b>");
				}else if(typeof $routeParams.category != 'undefined'){
					$.each(allposts, function(catID,category){
						if(category.urlEng==$routeParams.category){
							category_selected = category.urlEng;
							myScope.currentheader = $sce.trustAsHtml(category.title.replace('About', 'About<b>').replace('Others', '<b>Others')+'</b>');
						};
					});
				};
				// Retrieve list of categories and posts
				myScope.categories = [];
				myScope.posts = [];
				$.each(allposts, function(catID,category){
					myScope.categories.push({
						id:catID,
						title:$sce.trustAsHtml(category.title.replace('About', 'About<b>').replace('Others', '<b>Others')+'</b>'),
						url:'/my-posts/'+category.urlEng
					});
					$.each(category.posts, function(postID,post){
						var addit = false;
						if(tag_selected != ""){
							$.each(post[5], function(i,tag){
								if(tag.replace(/\W+/g, "-").replace("--", "-").toLowerCase()==tag_selected){
									addit = true;
								};
							});
						}else if(category_selected != ""){
							if(category.urlEng==category_selected){
								addit = true;
							};
						}else{
							addit = true;
						}
						if(addit){
							myScope.posts.push({
								catID:catID,
								URL:post[0],
								ref:post[0].slice(1),
								title:$sce.trustAsHtml(post[1]),
								date:post[4],
								tags:post[5],
								imgURL:'/imgs/daniel-mayor-post-image-'+post[7]+'.jpg'
							});
						};
					});
				});
				// Flip Page
				MovePage.run(
					pageOrder.directionNewPage('/my-posts'),
					Views.postListL(),
					Views.postListR(),
					myScope
				);
			},
			postListEsp : function($scope,$routeParams,$sce,pageOrder,MovePage){
				var myScope = $scope.$new(true),
					tag_selected = "",
					category_selected = "";
				// Wether is a category/tag/full list
				myScope.postsheader = $sce.trustAsHtml("Mis <b>Posts</b>");
				myScope.currentheader = $sce.trustAsHtml("Todos <b>Los Posts</b>");
				myScope.ViewArticle = "Leer Artículo";
				myScope.lang = 'es';
				myScope.traslation = '/my-posts';
				if(typeof $routeParams.tag != 'undefined'){
					tag_selected = $routeParams.tag;
					myScope.currentheader = $sce.trustAsHtml("Sobre: <b>"+tag_selected.toUpperCase()+"</b>");
				}else if(typeof $routeParams.category != 'undefined'){
					$.each(allposts, function(catID,category){
						if(category.urlEsp==$routeParams.category){
							category_selected = category.urlEsp;
							myScope.currentheader = $sce.trustAsHtml(category.titulo.replace('Sobre', 'Sobre<b>').replace('Otros', '<b>Otros')+'</b>');
						};
					});
				};
				// Retrieve list of categories and posts
				myScope.categories = [];
				myScope.posts = [];
				$.each(allposts, function(catID,category){
					myScope.categories.push({
						id:catID,
						title:$sce.trustAsHtml(category.titulo.replace('Sobre', 'Sobre<b>').replace('Otros', '<b>Otros')+'</b>'),
						url:'/mis-posts/'+category.urlEsp
					});
					$.each(category.posts, function(postID,post){
						var addit = false;
						if(tag_selected != ""){
							$.each(post[6], function(i,tag){
								if(tag.replace(/\W+/g, "-").replace("--", "-").toLowerCase()==tag_selected){
									addit = true;
								};
							});
						}else if(category_selected != ""){
							if(category.urlEsp==category_selected){
								addit = true;
							};
						}else{
							addit = true;
						}
						if(addit){
							myScope.posts.push({
								catID:catID,
								URL:post[2],
								ref:post[2].slice(1),
								title:$sce.trustAsHtml(post[3]),
								date:post[4],
								tags:post[6],
								imgURL:'/imgs/daniel-mayor-post-image-'+post[7]+'.jpg'
							});
						};
					});
				});
				// Flip Page
				MovePage.run(
					pageOrder.directionNewPage('/my-posts'),
					Views.postListL(),
					Views.postListR(),
					myScope
				);
			},
			postEng : function($scope,$sce,$route,pageOrder,MovePage){
				var myScope = $scope.$new(true),
					pageURL = '',
					pageImage = '',
					tempPrev = '',
					tempNext = '';
				myScope.categories = [];
				myScope.tags = [];
				myScope.morepostsheader = $sce.trustAsHtml("More <b>Posts</b>");
				myScope.readaboutheader = $sce.trustAsHtml("Read <b>About</b>");
				myScope.shareloveheader = $sce.trustAsHtml("Share <b>The Love</b>");
				myScope.ViewArticle = "View Article";
				myScope.lang = 'en';
				$.each(allposts, function(catID,category){
					myScope.categories.push({
						id:catID,
						title:$sce.trustAsHtml(category.title.replace('About', 'About<b>').replace('Others', '<b>Others')+'</b>'),
						url:'/my-posts/'+category.urlEng
					});
					$.each(category.posts, function(postID,post){
						if($route.current.originalPath == post[0]){
							$.each(post[5], function(tagIdx,tag){
								if(typeof tag != "undefined" && tag != ''){
									myScope.tags.push({
										title: $sce.trustAsHtml(tag),
										url: '/tag/'+tag.replace(/\W+/g, "-").replace("--", "-").toLowerCase()
									});
								};
							});
							pageURL				= post[0].substring(1);
							pageImage			= post[7];
							myScope.traslation	= post[2];
						}else{
							if(pageURL == ''){
								tempPrev = post[0];
							}else if(pageURL != '' && tempNext == ''){
								tempNext = post[0];
							}
						};
					});
				});
				myScope.PrevURL = tempPrev;
				myScope.NextURL = tempNext;
				// Social Icons
				myScope.social = function(socialNetwork){
					return Controllers.socialPopups(socialNetwork,pageURL,pageImage);
				};
				// Move Page
				MovePage.run(
					pageOrder.directionNewPage($route.current.originalPath),
					Views.postL(),
					Views.postR('/content'+$route.current.originalPath),
					myScope
				);
			},
			postEsp : function($scope,$sce,$route,pageOrder,MovePage){
				var myScope = $scope.$new(true),
					pageURL = '',
					pageImage = '',
					tempPrev = '',
					tempNext = '';
				myScope.categories = [];
				myScope.tags = [];
				myScope.morepostsheader = $sce.trustAsHtml("Mas <b>Posts</b>");
				myScope.readaboutheader = $sce.trustAsHtml("Leer <b>Sobre</b>");
				myScope.shareloveheader = $sce.trustAsHtml("Comparte <b>El Amor</b>");
				myScope.ViewArticle = "Leer Artículo";
				myScope.lang = 'es';
				$.each(allposts, function(catID,category){
					myScope.categories.push({
						id:catID,
						title:$sce.trustAsHtml(category.titulo.replace('Sobre', 'Sobre<b>').replace('Otros', '<b>Otros')+'</b>'),
						url:'/mis-posts/'+category.urlEsp
					});
					$.each(category.posts, function(postID,post){
						if($route.current.originalPath == post[2]){
							$.each(post[6], function(tagIdx,tag){
								myScope.tags.push({
									title: $sce.trustAsHtml(tag),
									url: '/etiqueta/'+tag.replace(/\W+/g, "-").replace("--", "-").toLowerCase()
								});
							});
							pageURL				= post[2].substring(1);
							pageImage			= post[7];
							myScope.traslation	= post[0];
						}else{
							if(pageURL == ''){
								tempPrev = post[2];
							}else if(pageURL != '' && tempNext == ''){
								tempNext = post[2];
							}
						};
					});
				});
				myScope.PrevURL = tempPrev;
				myScope.NextURL = tempNext;
				// Social Icons
				myScope.social = function(socialNetwork){
					return Controllers.socialPopups(socialNetwork,pageURL,pageImage);
				};
				// Move Page
				MovePage.run(
					pageOrder.directionNewPage($route.current.originalPath),
					Views.postL(),
					Views.postR('/content'+$route.current.originalPath),
					myScope
				);
			},
			contactMe : function(){
				$('#aboutme').removeClass('open');
				$('#contactme').addClass('open');
			},
			aboutMe : function(){
				$('#contactme').removeClass('open');
				$('#aboutme').addClass('open');
			},
			cv : function($scope,pageOrder,MovePage){
				var myScope = $scope.$new(true);
				// Move Page
				MovePage.run(
					pageOrder.directionNewPage('/cv'),
					Views.cvL(),
					Views.cvR(),
					myScope
				);
			},
			socialPopups : function(buttonName,pageURL,pageImage){
				var popUp;
				switch(buttonName){
					case 'fbIcon':
					default:
						popUp=window.open('https://www.facebook.com/sharer.php?u=http%3A%2F%2Fwww.danielmayor.com%2F'+pageURL, 'popupwindow', 'scrollbars=yes,width=800,height=400,top='+(screen.height-400)/2+',left='+(screen.width-800)/2);
					break;
					case 'twIcon':
						popUp=window.open('https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.danielmayor.com%2F'+pageURL, 'popupwindow', 'scrollbars=yes,width=800,height=400,top='+(screen.height-400)/2+',left='+(screen.width-800)/2);
					break;
					case 'gpIcon':
						popUp=window.open('https://plus.google.com/share?url=http%3A%2F%2Fwww.danielmayor.com%2F'+pageURL+'&amp;hl=es', 'popupwindow', 'scrollbars=yes,width=900,height=600,top='+(screen.height-600)/2+',left='+(screen.width-900)/2);
					break;
					case 'linIcon':
						popUp=window.open('https://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fwww.danielmayor.com%2F'+pageURL+'&amp;source=DanielMayor.Com', 'popupwindow', 'scrollbars=yes,width=1000,height=400,top='+(screen.height-400)/2+',left='+(screen.width-1000)/2);
					break;
					case 'reddIcon':
						popUp=window.open('http://www.reddit.com/submit?url=http%3A%2F%2Fwww.danielmayor.com%2F'+pageURL, 'popupwindow', 'scrollbars=yes,width=870,height=450,top='+(screen.height-450)/2+',left='+(screen.width-870)/2);
					break;
					case 'pinIcon':
						popUp=window.open('http://pinterest.com/pin/create/button/?url=http%3A%2F%2Fwww.danielmayor.com%2F'+pageURL+'&amp;media=http%3A%2F%2Fwww.danielmayor.com%2Fimages%2Fdaniel-mayor-post-image-'+pageImage+'.jpg', 'popupwindow', 'scrollbars=yes,width=800,height=450,top='+(screen.height-450)/2+',left='+(screen.width-800)/2);
					break;
				};
				popUp.focus();
				return false;
			},
			loadIt : function($scope,$location,$route){
				window.location.replace($route.current.originalPath);
				window.location.reload();
			}
		};

	// INJECTIONS
	routesConfiguration.$inject = ['$routeProvider', '$locationProvider'];
	Controllers.postListEng.$inject = ['$scope','$routeParams','$sce','pageOrder','MovePage'];
	Controllers.postListEsp.$inject = ['$scope','$routeParams','$sce','pageOrder','MovePage'];
	Controllers.postEng.$inject = ['$scope','$sce','$route','pageOrder','MovePage'];
	Controllers.postEsp.$inject = ['$scope','$sce','$route','pageOrder','MovePage'];
	Controllers.cv.$inject = ['$scope','pageOrder','MovePage'];
	//Controllers.contactMe.$inject = [];
	//Controllers.aboutMe.$inject = [];
	Controllers.loadIt.$inject = ['$scope','$location','$route'];
	Services.MovePage.$inject = ['$compile'];

	// APP
	angular.module('pagesApp', ['ngRoute'])
		.config(routesConfiguration)
		.service('pageOrder', Services.pageOrder)
		.service('MovePage', Services.MovePage)
		.controller('postListEngController', Controllers.postListEng)
		.controller('postListEspController', Controllers.postListEsp)
		.controller('postEngController', Controllers.postEng)
		.controller('postEspController', Controllers.postEsp)
		.controller('cvController', Controllers.cv)
		.controller('contactMeController', Controllers.contactMe)
		.controller('aboutMeController', Controllers.aboutMe)
		.controller('loadItController', Controllers.loadIt);
})();
